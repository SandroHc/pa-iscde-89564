<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="pt.iscte.pidesco.minimap" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="pt.iscte.pidesco.minimap" id="pt.iscte.pidesco.minimap.inspection" name="Minimap Inspection"/>
      </appinfo>
      <documentation>
         &lt;p&gt;Adds inspection rules that can be activated/deactivated in the Minimap view.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;For more information, visit the wiki: &lt;a href=&quot;https://github.com/SandroHc/pa-iscde-89564/wiki&quot;&gt;https://github.com/SandroHc/pa-iscde-89564/wiki&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="inspection"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Unique ID for this extension.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Friendly name of the extension, to be displayed in the UI.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="inspection">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Inspection class for defining rules on the parsed code.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":pa.iscde.minimap.extensibility.MinimapInspection"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  ID for this inspection. Must be unique inside of this extension.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Firendly name of this inspection rule, to be displayed in the UI.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  Detailed description of what this inspection rule does.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;p&gt;&lt;b&gt;For more examples, visit the page on the wiki: &lt;a href=&quot;https://github.com/SandroHc/pa-iscde-89564/wiki#usage&quot;&gt;https://github.com/SandroHc/pa-iscde-89564/wiki#usage&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;To create your own inspection rules, you must create an implementation of the interface provided, and listen for your desired node type.&lt;/p&gt;
&lt;p&gt;The following example analyzes &lt;code&gt;MethodInvocation&lt;/code&gt; nodes, changes the text color and style, and adds a tooltip with the name of the method being called.&lt;/p&gt;

&lt;pre lang=&quot;java&quot;&gt;public class MyInpsectionRules implements MinimapInspection {
	@Override
	public void inspect(ASTNode node, InspectionContext context) {
		if (node instanceof MethodInvocation) {
			String methodName = node.getName().toString();
			int line = context.getLineStart();

			context.setForeground(Colors.PINK);
			context.setStyle(Styles.BOLD);
			context.addTooltip(&quot;METHOD BEING CALLED: &quot; + methodName);
			context.addTooltip(&quot;LINE &quot; + line);
		}
	}
}&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         &lt;p&gt;For multiple rules, it is recommended to create multiple implementations of the interface (one for each rule).&lt;/p&gt;
&lt;p&gt;Inspection IDs must be unique for a given extension. Names may be duplicated, but it&apos;s not recommended as it may confuse users.&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         A working implementation of the inspection rule can be seen at &lt;pre&gt;pa.iscde.minimap.extensibility.inspections.BaseInspection&lt;/pre&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         2020 (c) Sandro Marques &lt;https://sandrohc.net&gt;
      </documentation>
   </annotation>

</schema>
